# using kwargs args
def info_kwargs(**kwargs):
    for key, value in sorted(kwargs.items()):
        print(f'{key}: {value}')

# using key arg
numbers = [(10, 10, 10), (30, 45, 56), (81, 39), (1, 2, 3), (12,), (-2, -4, 100), (1, 2, 99), (89, 9, 34), (10, 20, 30, -2), (50, 40, 50), (34, 78, 65), (-5, 90, -1, -5), (1, 2, 3, 4, 5, 6), (-9, 8, 4), (90, 1, -45, -21)]

def find_mean(i):
    return sum(i)/len(i)

print(min(numbers, key=find_mean))
print(max(numbers, key=find_mean))

# find the value of a polynomial
from functools import reduce

n = list(map(int, input().split()))
m = int(input())

coef = list(range(len(n)))[::-1]

def count_polynomial(n, m, coef):
    counted_list = list(map(lambda x, c: x * m ** c, n, coef))
    sum = reduce(lambda x, y : x + y, counted_list, 0)
    
    return sum

print(print_polynomial(n, m, coef))
