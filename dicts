# перевод текста в азбуку Морзе
  letters = [c for c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789']
morse = ['.-', '-...', '-.-.', '-..', '.', '..-.', '--.', '....', '..', '.---', '-.-', '.-..', '--', '-.', '---', '.--.', '--.-', '.-.', '...', '-', '..-', '...-', '.--', '-..-', '-.--', '--..', '-----', '.----', '..---', '...--', '....-', '.....', '-....', '--...', '---..', '----.']

morse_dict = dict(zip(letters, morse))

n = input().upper()

for i in n:
    if i in letters:
        print(morse_dict[i], end=' ')

#описание условий с помощью словаря

num = int(input())

if num == 1:
    description = 'One'
elif num == 2:
    description = 'Two'
elif num == 3:
    description = 'Three'
else:
    description = 'Unknown'

print(description)

num = int(input())

description = {1: 'One', 2: 'Two', 3: 'Three'}

print(description.get(num, 'Unknown'))

# создание словая с квадратами ключей
a = [i for i in range(1, 16)]
b = [i**2 for i in range(1, 16)]
result = dict(zip(a,b))

# проверка, являются ли две строки анаграммами
w1 = input()
w2 = input()

d1 = {}
d2 = {}

for i in w1:
    d1[i] = d1.get(i, 0) + 1
    
for i in w2:
    d2[i] = d2.get(i, 0) + 1
    
if d1 == d2:
    print('YES')
else:
    print('NO')

dicts = [{},{}]

# еще одна проверка на анаграмму
for d in dicts:
    for i in input().lower():
        d[i] = d.get(i, 0) + 1
    for j in ' .,;:!?':
        if j in d.keys():
            del d[j]
print(['NO', 'YES'][dicts[0] == dicts[1]])

# составление словаря синонимов
n = int(input())

synonym_dict = {}

for _ in range(n):
    temp_str = input().split()
    synonym_dict[temp_str[0]] = synonym_dict.get(temp_str[0], temp_str[1])
    synonym_dict[temp_str[1]] = synonym_dict.get(temp_str[1], temp_str[0])
    
print(synonym_dict[input()])

# создание справочника стран по городам

n = int(input())

cities_dict = {}

for _ in range(n):
    con_cit = input().split()
    for i in range(1, len(con_cit)):
        cities_dict[con_cit[i]] = cities_dict.get(con_cit[i], con_cit[0])
        
for _ in range(int(input())):
    print(cities_dict[input()])
