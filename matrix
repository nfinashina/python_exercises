n = int(input())
m = int(input())

matrix = [[input() for _ in range(m)] for _ in range(n)]
    
for i in range(n):
    print(*matrix[i])
print()
for j in range(m):
    for i in range(n):
        print(matrix[i][j], end=" ")
    print()

#вычисление следа матрицы

n = int(input())

matrix = [input().split() for _ in range(n)]

s = 0
for i in range(n):
    s += int(matrix[i][i])

print(s)

# вычисление количества элементов в строке матрицы, которые больше среднего арифметического

n = int(input())

matrix = [input().split() for _ in range(n)]

count = 0
row_sum = 0
row_med = 0

for i in range(n):
    for j in range(n):
        row_sum += int(matrix[i][j])
    row_med = row_sum / n
    for j in range(n):
        if int(matrix[i][j]) > row_med:
            count += 1
    print(count)
    count = 0
    row_sum = 0
    row_med = 0

# создание матрицы

matrix = [list(map(int, input().split())) for i in range(int(input()))]


# вычисление максимального значения в области
n = int(input())

matrix = [input().split() for _ in range(n)]

max = -1000

for i in range(n):
    for j in range(n):
        if i >= j and int(matrix[i][j]) > max:
            max = int(matrix[i][j])
            
print(max)

n = int(input())

matrix = [list(map(int, input().split())) for i in range(n)]
max = -1000

for i in range(n):
    for j in range(n):
        if ((i >= j and i <= (n - 1 - j)) or (i <= j and i >= (n - 1 - j))) and matrix[i][j] > max:
            max = matrix[i][j]
            
print(max)
